---
export const prerender = false;
import Layout from '../../layouts/Layout.astro';
import { getSupabaseClient } from '../../lib/supabase';
import HuntGamesStream from '../../components/Stream/HuntGamesStream.vue';

const { eventId } = Astro.params;

console.log('[stream.astro] Event ID from params:', eventId);

if (!eventId) {
  console.log('[stream.astro] No eventId provided, redirecting');
  return Astro.redirect('/');
}

// Try to verify the event exists, but don't redirect on failure for now
const supabase = getSupabaseClient();
let event = { id: eventId, name: 'Hunt Stream' }; // Default fallback

try {
  const { data: eventData, error } = await supabase
    .from('suggestion_events')
    .select('id')
    .eq('id', eventId)
    .single();
  
  console.log('[stream.astro] Event lookup result:', { eventData, error });
  
  if (eventData && !error) {
    // suggestion_events doesn't include a name; keep fallback title
    event = { id: eventData.id, name: 'Hunt Stream' };
    console.log('[stream.astro] Event found in suggestion_events:', event.id);
  } else {
    console.log('[stream.astro] Event not found or error, using fallback');
  }
} catch (e) {
  console.log('[stream.astro] Exception during event lookup:', e);
}
---

<Layout title={`Hunt Games Stream - ${event.name}`} hideNav={true}>
  <div class="min-h-screen bg-gradient-to-br from-brown-dark to-brown p-4">
    <div class="max-w-6xl mx-auto">
      <!-- Stream Element Component -->
      <div class="flex justify-center gap-4 mt-2">
        <div class="flex items-center gap-1">
          <div class="w-3 h-3 bg-amber-400 rounded border-2 border-amber-400"></div>
          <span>Super Bonus</span>
        </div>
        <div class="flex items-center gap-1">
          <div class="w-3 h-3 bg-violet-500 rounded border-2 border-violet-500"></div>
          <span>Bonus</span>
        </div>
      </div>
      <div class="bg-black/20 rounded-xl p-4 backdrop-blur-sm border border-orange/30">
        <HuntGamesStream client:load eventId={event.id} />
      </div>

    </div>
  </div>

  
  
  <style>
    .hunt-games-stream {
      background-color: rgba(89, 33, 1, 0.95);
      border-radius: 0.5rem;
      padding: 0.5rem;
      backdrop-filter: blur(4px);
      font-family: 'Inter', sans-serif;
    }
    
    .games-grid {
      display: grid;
      gap: 0.25rem;
      grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
      max-height: 400px;
      overflow-y: auto;
    }
    
    .game-card {
      position: relative;
      border-radius: 0.375rem;
      overflow: hidden;
      transition: all 0.2s;
      aspect-ratio: 1;
      border: 2px solid transparent;
    }
    
    .game-card:hover {
      transform: scale(1.05);
    }
    
    .game-card.super-bonus {
      border-color: #fbbf24;
      box-shadow: 0 0 8px rgba(251, 191, 36, 0.5);
    }
    
    .game-card.bonus {
      border-color: #8b5cf6;
      box-shadow: 0 0 8px rgba(139, 92, 246, 0.5);
    }
    
    .game-card.regular {
      border-color: #6b7280;
    }
    
    .game-thumb {
      width: 100%;
      height: 100%;
      position: relative;
    }
    
    .game-name {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background-color: rgba(0, 0, 0, 0.8);
      color: white;
      font-size: 10px;
      padding: 0.125rem 0.25rem;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      line-height: 1.2;
    }
    
    .status-indicator {
      position: absolute;
      top: 0.25rem;
      right: 0.25rem;
    }
    
    .status-badge {
      font-size: 9px;
      font-weight: bold;
      padding: 0.125rem 0.25rem;
      border-radius: 0.25rem;
      color: black;
      line-height: 1;
      min-width: 14px;
      text-align: center;
    }
    
    .stream-footer {
      margin-top: 0.5rem;
      text-align: center;
      padding: 0.25rem;
      border-top: 1px solid rgba(234, 88, 12, 0.3);
    }
  </style>
</Layout>
